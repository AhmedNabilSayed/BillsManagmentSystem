@using BillsEntity;
@model IEnumerable<BillHeader>;
@{
    var Vendor = new SelectList(ViewBag.Vendor, "VndCod", "VndNam");
    var Items = new SelectList(ViewBag.Items, "ItmCod", "ItmNam");
    ViewData["Title"] = "ALL Invoices";
}

<h1>All invoces</h1>
<br />
<a asp-controller="Bills" asp-action="Create" class="btn btn-primary">create new invoice</a>
<br />
<br />

@if (TempData["message"] != null)
{
    <div class="alert alert-success">
        <h3>
            @TempData["message"]
        </h3>
    </div>
}
@if (Model?.Count() > 0)
{
    <!-- Item Table displayed on the page -->
    <div id="itemTableDiv">
        <table class="table table-bordered" id="itemTable">
            <thead>
                <tr>
                    <th>Item Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                    <th>Update</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
    <!-- Modal for updating the item table -->
    <div class="modal fade" id="itemTableModal" tabindex="-1" role="dialog" aria-labelledby="itemTableModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="itemTableModalLabel">Update Items</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Same item table structure as displayed on the page -->
                    <div id="itemTableDivModal">
                        <table class="table table-bordered" id="itemTableModalContent" >
                            <thead>
                                <tr>
                                    <th>Item Name</th>
                                    <th>Quantity</th>
                                    <th>Price</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>

                            </tbody>
                            <!-- Table content will be populated dynamically here -->
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary closeModel" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary saveUpdate" data-dismiss="modal">Save</button>
                    <!-- You can add a Save button here if needed -->
                </div>
            </div>
        </div>
    </div>

    <!-- "Update" anchor link -->


    <table class="table table-striped table-hover">
        <!-- Table header -->
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(x => x.BILCOD)</th>
                <th>@Html.DisplayNameFor(x => x.BILDAT)</th>
                <th>@Html.DisplayNameFor(x => x.Vendor.VndNam)</th>
                <th>@Html.DisplayNameFor(x => x.BILPRC)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <!-- Table body -->
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class ="row-clickable" data-bilcod="@item.BILCOD">@item.BILCOD</td>
                    <td class="row-clickable" data-bilcod="@item.BILCOD">@item.BILDAT</td>
                    <td class="row-clickable" data-bilcod="@item.BILCOD">@item.Vendor.VndNam</td>
                    <td class="row-clickable" data-bilcod="@item.BILCOD"><input value="@item.BILPRC" id="@item.BILCOD" disabled /></td>
                    <td>
                       

                        <a class="btn btn-warning" asp-controller="Bills" asp-action="Update" asp-route-id="@item.BILCOD">
                            <i class="fas fa-edit"></i> UPDATE
                        </a>

                        <a class="btn btn-danger delete-btn" data-id="@item.BILCOD">
                            <i class="fas fa-trash-o"></i> Delete
                        </a>

                        <a class="btn btn-outline-info" id="printButton" data-parameter="@item.BILCOD">
                            <i class="fas fa-print"></i> Print
                        </a>

                         @if (!string.IsNullOrEmpty(item.BILIMG))
                        {
                            <a href="~/files/images/@item.BILIMG" class="btn btn-primary" download>Download File</a>
                        }
                    </td>
                  
                    
                </tr>
            }
        </tbody>
    </table>
   
}
else
{
    <div class="alert alert-warning">
        <h3>no departments found</h3>
    </div>
}


<div class="modal" tabindex="-1" id="deleteConfirmationModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this item?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelDeleteButton" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>



@section scripts
    {
    

    <script>
        $(document).ready(function () {
            // Update button click event
            $(document).on('click', '.updateBtn', function () {
                // Get the closest row of the clicked button
                var row = $(this).closest('tr').clone(); // Clone the row

                // Remove the "Update" and "Delete" buttons from the cloned row
                row.find('.updateBtn').closest('td').remove();
                row.find('.delete').closest('td').remove();
                row.find('.itmqty').removeAttr('disabled');
                row.find('.itmprc').removeAttr('disabled');

                // Append the cloned row to itemTableModelContent
                $('#itemTableModalContent tbody').append(row);

                // Show the modal
                $('#itemTableModal').modal('show');
            });

            $('.closeModel').click(function () {
                $("#itemTable tbody").empty();
                $("#itemTableModalContent tbody").empty();
                // Show the modal
                $('#itemTableModal').modal('hide');
            });

            $('.saveUpdate').on('click', function () {
                var row = $('#itemTableModalContent tbody tr:first');

                var dtlCod = row.data("dtlcod");
                var bilCod = row.data("bilcod");
                var itmqty = row.find(".itmqty").val();
                var itmprc = row.find(".itmprc").val();

                var table = document.getElementById('itemTable');
                var updateRow = $(table).find('tr[data-dtlcod="' + dtlCod + '"]');
                var updateItmqty = updateRow.find(".itmqty");
                var updateItmprc = updateRow.find(".itmprc");
                var updateTotal = updateRow.find(".total");



                if (dtlCod && itmprc && itmqty) {
                            $.ajax({
                                url: '/Bills/UpdateItem',
                                type: 'POST',
                                data: {
                                    DTLCOD: dtlCod,
                                    ITMQTY: itmqty,
                                    ITMPRC: itmprc
                                },
                                success: function (data) {
                                    // Handle success response if needed
                                    console.log("Item updated successfully");
                                    console.log(data);
                                    $("#" + bilCod).val(data.BillHeader.BILPRC);

                                    updateItmprc.val(itmprc);
                                    updateItmqty.val(itmqty);
                                    updateTotal.val(parseFloat(itmprc) * parseInt(itmqty));

                                    $("#itemTableModalContent tbody").empty();
                                    // Show the modal
                                    $('#itemTableModal').modal('hide');
                                },
                                error: function (xhr, status, error) {
                                    // Handle error response if needed
                                    console.error("Error updating item: ", error);
                                }
                            });
                }
            });


       
        });
    </script>



    <script>
        $(document).ready(function () {     
            // Handle click event on rows with class 'row-clickable'
            $('.row-clickable').click(function () {
                var bilcod =  $(this).data('bilcod');  // Get the BILCOD from the row
                // Ajax call to fetch items associated with the BILCOD
                $.ajax({
                    url: '/Bills/GetItems', // Specify the URL to fetch items
                    type: 'GET',
                    data: { BILCOD: bilcod }, // Pass the BILCOD as a parameter
                    success: function (data) {
                        // Populate the item table with the fetched items
                        $("#itemTable tbody").empty();

                        // Loop through the data and append rows to the table body
                        $.each(data, function (index , item) {
                            // Create a new row
                            var newRow = $("<tr data-dtlcod='" + item.DTLCOD + "' data-bilcod='" + item.BILCOD + "'>");

                            // Populate the row with item data
                            newRow.append("<td>" + item.Item.ItmNam + "</td>");
                            newRow.append("<td><input class='itmqty' value='" + item.ITMQTY + "' disabled></td>");
                            newRow.append("<td><input class='itmprc' value='" + item.ITMPRC + "' disabled></td>");
                            newRow.append("<td><input id='total' class='total' value='" + (parseInt(item.ITMPRC) * parseInt(item.ITMQTY)) + "' disabled></td>");

                            // Append an action column with a button, link, or any action element
                            newRow.append("<td><button id='openUpdateModal' class='btn btn-warning updateBtn' >Update</button></td>");
                            newRow.append("<td><button class='delete btn btn-danger'>Delete</button></td>");

                            // Append the new row to the table body
                            $("#itemTable tbody").append(newRow);

                            console.log(data);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error(error); // Log any errors
                    }
                });

            });
        });
    </script>

    <script>
        // Wait for the document to be fully loaded
        $(document).ready(function () {
            // Add click event listener to all elements with class "delete-btn"
            $(".delete-btn").click(function () {
                // Get the ID from the data attribute
                var id = $(this).data("id");

                // Show confirmation dialog
                var confirmDelete = confirm("Are you sure you want to delete this item?");

                // If user confirms, redirect to delete action with the provided ID
                if (confirmDelete) {
                    window.location.href = "/Bills/Delete/" + id;
                } else {
                    // If user cancels, do nothing
                    return false;
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {

            $(document).on("change", "#itemTableModalContent input", function () {
                // Get the closest row of the changed input
                var row = $(this).closest("tr");
                var itmqty = row.find(".itmqty").val();
                var itmprc = row.find(".itmprc").val();

                var total = row.find(".total");
                total.val(parseFloat(itmprc) * parseInt(itmqty));

                // Make AJAX call to UpdateItem action
               
            });
            $(document).ready(function () {
                // Bind click event to delete button
                $(document).on("click", "#itemTable .delete", function () {
                    // Get the closest row of the changed input
                    var row = $(this).closest("tr");
                    // Get data from the row
                    var dtl = row.data("dtlcod");
                    var bilCod = row.data("bilcod");
                    // Show delete confirmation modal
                    $('#deleteConfirmationModal').modal('show');

                    // Store data for the current row in the modal's data attributes
                    $('#deleteConfirmationModal').data('row', row);
                    $('#deleteConfirmationModal').data('bilCod', bilCod);
                    $('#deleteConfirmationModal').data('dtl', dtl);
                });

                // Bind click event to confirm delete button
                $('#confirmDeleteButton').on('click', function () {
                    // Get data from the modal's data attributes
                    var row = $('#deleteConfirmationModal').data('row');
                    var bilCod = $('#deleteConfirmationModal').data('bilCod');
                    var dtl = $('#deleteConfirmationModal').data('dtl');

                    // Make AJAX call only if user confirms
                    if (dtl) {
                        $.ajax({
                            url: '/Bills/DeleteItem',
                            type: 'POST',
                            data: {
                                DTLCOD: dtl
                            },
                            success: function (data) {
                                // Handle success response if needed
                                console.log("Item deleted successfully");
                                console.log(data);
                                row.remove();
                                $("#" + bilCod).val(data.billHeader.bilprc);
                            },
                            error: function (xhr, status, error) {
                                // Handle error response if needed
                                console.error("Error updating item: ", error);
                            }
                        });
                    }

                    // Close the modal after handling the confirmation
                    $('#deleteConfirmationModal').modal('hide');
                });

                // Bind click event to cancel delete button
                $('#cancelDeleteButton').on('click', function () {
                    // If user cancels, do nothing
                    $('#deleteConfirmationModal').modal('hide');
                });
            });
        });
    </script>

    <script>
        document.querySelectorAll("#printButton").forEach(function (button) {
            button.addEventListener("click", function () {
                console.log("Button clicked");  // Debugging line

                var parameterValue = button.getAttribute('data-parameter');
                console.log("Parameter value:", parameterValue);  // Debugging line

                // Create a form element
                var form = document.createElement("form");
                form.setAttribute("method", "post");
                form.setAttribute("action", "@Url.Action("TestReport", "Bills")");
                form.setAttribute("target", "_blank"); // Open in a new tab

                // Create an input element for the parameter
                var input = document.createElement("input");
                input.setAttribute("type", "hidden");
                input.setAttribute("name", "id");
                input.setAttribute("value", parameterValue);

                // Append the input element to the form
                form.appendChild(input);

                // Append the form to the document body and submit it
                document.body.appendChild(form);
                form.submit();

                // Remove the form from the document after submission
                document.body.removeChild(form);
            });
        });


    </script>

}
