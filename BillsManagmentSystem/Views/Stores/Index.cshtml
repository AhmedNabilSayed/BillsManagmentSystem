@using BillsManagmentSystem.ViewModels;
@model IEnumerable<StoreViewModel>
@inject SignInManager<AppUser> signInManager

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>All Stores</h1>
<br />
<a class="btn btn-primary createStore">Create</a>
<br />
<br />
@if(Model?.Count() > 0)
{
    <table id="itemTable" class="table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(x => x.Id)</th>
                <th>@Html.DisplayNameFor(x => x.Name)</th>
                <th>@Html.DisplayNameFor(x => x.Location)</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in Model)
            {
                <tr data-id="@item.Id" data-name="@item.Name" data-location="@item.Location">
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Location</td>
                    @if (signInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                    {    
                    <td>
                        <a id='openUpdateModal' class='btn btn-warning updateBtn'>
                            <i class="fas fa-edit"></i>Update
                        </a>
                    </td>
                    <td>
                        <a class="btn btn-danger delete">
                            <i class="fas fa-trash"></i>Delete
                        </a>
                    </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-warning">
        <h3>No Store Found!!</h3>
    </div>
}


<!-- Modal for updating the item table -->
<div class="modal fade" id="itemTableModal" tabindex="-1" role="dialog" aria-labelledby="itemTableModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="itemTableModalLabel1"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Same item table structure as displayed on the page -->
                <div id="itemTableDivModal">
                    <table class="table table-bordered" id="itemTableModalContent">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Name</th>
                                <th>Location</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                        <!-- Table content will be populated dynamically here -->
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary closeModel" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary save" data-dismiss="modal">Save</button>
                <!-- You can add a Save button here if needed -->
            </div>
        </div>
    </div>
</div>


<!-- Modal For Confirmation message when deleted -->
<div class="modal" tabindex="-1" id="deleteConfirmationModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this Store?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelDeleteButton" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>


@section scripts
    {
    <script>
        $(document).ready(function () {
            // Update button click event
            $(document).on('click', '.updateBtn', function () {
                // Get the closest row of the clicked button
                var row = $(this).closest('tr').clone(); // Clone the row

                var id = row.data("id");
                var name = row.data("name");
                var location = row.data("location");

                document.getElementById("itemTableModalLabel1").innerHTML = "Update Store";
                $('#itemTableModalContent tbody').append("<tr><td><input type='text' value=' " + id + "' class='form-control id' disabled></td><td><input  class='form-control name' value='" + name + "' ></td><td><input  class='form-control location' value='" + location + "' ></td></tr>");


                // Show the modal
                $('#itemTableModal').modal('show');
            });

            $('.closeModel').click(function () {
                $("#itemTableModalContent tbody").empty();
                // Show the modal
                $('#itemTableModal').modal('hide');
            });

            $('.save').on('click', function () {
                var row = $('#itemTableModalContent tbody tr:first');

                var id = row.find(".id").val();
                var Id = row.find(".id").val();
                var Name = row.find(".name").val();
                var Location = row.find(".location").val();



                if (Id && Name && Location) {
                    $.ajax({
                        url: '/Stores/Edit',
                        type: 'POST',
                        data: {
                            id: id,
                            Name: Name,
                            Location: Location
                        },
                        success: function (data) {
                            // Handle success response if needed
                            console.log("Item updated successfully");
                            console.log(data);
                            

                            $("#itemTableModalContent tbody").empty();
                            // Show the modal
                            $('#itemTableModal').modal('hide');

                            location.reload();
                        },
                        error: function (xhr, status, error) {
                            // Handle error response if needed
                            console.error("Error updating vendor: ", error);
                        }
                    });
                } else if (Name && Location) {
                    $.ajax({
                        url: '/Stores/Create',
                        type: 'POST',
                        data: {
                            Name: Name,
                            Location: Location
                        },
                        success: function (data) {
                            // Handle success response if needed
                            console.log("store Created successfully");

                            $("#itemTableModalContent tbody").empty();
                            // Show the modal
                            $('#itemTableModal').modal('hide');
                            location.reload();
                        },
                        error: function (xhr, status, error) {
                            // Handle error response if needed
                            console.error("Error Creating store: ", error);
                        }
                    });
                }
            });




            // Handle click event for "Create New Item" button
            $('.createStore').click(function () {
                // Show the modal
                $('#itemTableModal').modal('show');

                document.getElementById("itemTableModalLabel1").innerHTML = "Create Store";
                $('#itemTableModalContent tbody').append('<tr><td><input type="text" class="form-control name"></td><td><input type="text" class="form-control location"></td></tr>');
            });

            $('#itemTableModal').on('shown.bs.modal', function (e) {
                $('#itemTableModalContent th:contains("Id")').remove();
            });






        });
    </script>

    <script>
        $(document).ready(function () {
            // Bind click event to delete button
            $(document).on("click", "#itemTable .delete", function () {
                // Get the closest row of the changed input
                var row = $(this).closest("tr");
                // Get data from the row
                var id = row.data("id");
                // Show delete confirmation modal
                $('#deleteConfirmationModal').modal('show');

                // Store data for the current row in the modal's data attributes
                $('#deleteConfirmationModal').data('row', row);
                $('#deleteConfirmationModal').data('id', id);
            });

            // Bind click event to confirm delete button
            $('#confirmDeleteButton').on('click', function () {
                // Get data from the modal's data attributes
                var row = $('#deleteConfirmationModal').data('row');
                var id = $('#deleteConfirmationModal').data('id');

                // Make AJAX call only if user confirms
                if (id) {
                    $.ajax({
                        url: '/Stores/Delete',
                        type: 'POST',
                        data: {
                            Id: id
                        },
                        success: function (data) {
                            if (data == "false"){
                                alert("You Can't delete this store because have Items.");
                                $('#deleteConfirmationModal').modal('hide');

                            }else{
                                // Handle success response if needed
                                console.log("store deleted successfully");
                                console.log(data);
                                // Close the modal after handling the confirmation
                                $('#deleteConfirmationModal').modal('hide');
                                row.remove();
                            }
                            
                        },
                        error: function (xhr, status, error) {
                            // Handle error response if needed
                            console.error("Error deleting store: ", error);
                        }
                    });
                }


            });

            // Bind click event to cancel delete button
            $('#cancelDeleteButton').on('click', function () {
                // If user cancels, do nothing
                $('#deleteConfirmationModal').modal('hide');
            });
        });
    </script>
}