// <auto-generated />
using System;
using BillsDAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BillsDAL.Migrations
{
    [DbContext(typeof(BillsDbContext))]
    [Migration("20240312004846_AddRelationShipeBetweenBillHeaderAndStoreTable")]
    partial class AddRelationShipeBetweenBillHeaderAndStoreTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BillsEntity.BillDetails", b =>
                {
                    b.Property<int>("DTLCOD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DTLCOD"), 1L, 1);

                    b.Property<int>("BILCOD")
                        .HasColumnType("int");

                    b.Property<int>("ITMCOD")
                        .HasColumnType("int");

                    b.Property<decimal>("ITMPRC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ITMQTY")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("DTLCOD");

                    b.HasIndex("BILCOD");

                    b.HasIndex("ITMCOD");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("BillsEntity.BillHeader", b =>
                {
                    b.Property<int>("BILCOD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BILCOD"), 1L, 1);

                    b.Property<DateTime>("BILDAT")
                        .HasColumnType("datetime2");

                    b.Property<string>("BILIMG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BILPRC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("VNDCOD")
                        .HasColumnType("int");

                    b.HasKey("BILCOD");

                    b.HasIndex("StoreId");

                    b.HasIndex("VNDCOD");

                    b.ToTable("BillHeaders");
                });

            modelBuilder.Entity("BillsEntity.Items", b =>
                {
                    b.Property<int>("ItmCod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItmCod"), 1L, 1);

                    b.Property<string>("ItmNam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ItmPrc")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItmCod");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("BillsEntity.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("StoreId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("BillsEntity.Stores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("BillsEntity.Vendor", b =>
                {
                    b.Property<int>("VndCod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VndCod"), 1L, 1);

                    b.Property<string>("VndNam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VndCod");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("BillsEntity.BillDetails", b =>
                {
                    b.HasOne("BillsEntity.BillHeader", "BillHeader")
                        .WithMany()
                        .HasForeignKey("BILCOD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BillsEntity.Items", "Item")
                        .WithMany()
                        .HasForeignKey("ITMCOD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillHeader");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("BillsEntity.BillHeader", b =>
                {
                    b.HasOne("BillsEntity.Stores", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BillsEntity.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VNDCOD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("BillsEntity.Stock", b =>
                {
                    b.HasOne("BillsEntity.Items", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BillsEntity.Stores", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Store");
                });
#pragma warning restore 612, 618
        }
    }
}
